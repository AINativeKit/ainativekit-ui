import{j as e}from"./jsx-runtime-DF2Pcvd1.js";import{r}from"./index-B2-qRKKC.js";import{C as t}from"./CompactMap-Du4AN_BF.js";import{P as s}from"./PropsTable-Cl6IQ_go.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./LocationCarousel-DwHKGo0Z.js";import"./iframe-KsQ5_c9u.js";import"./Alert-Dd8CbNX0.js";import"./Button-Dng2PzYd.js";import"./Carousel-B89HBjdh.js";import"./LocationCard-Bbqdbr3H.js";import"./Badge-BePEr_L6.js";import"./Chip-DUrCjCup.js";import"./Features-DcYKce8P.js";const d="766px",a="478px",x=[{id:"tonys-pizza",name:"Tony's Pizza Napoletana",subtitle:"Neapolitan Pizzeria · North Beach",coords:[37.8001,-122.4098],description:"Award-winning Neapolitan pies in North Beach. A San Francisco institution serving authentic Italian pizza with locally-sourced ingredients.",thumbnail:"https://persistent.oaistatic.com/pizzaz/pizzaz-1.png",features:[{icon:"star",label:"4.8"},{label:"$$$"}],lists:[{title:"Reviews",items:[{id:"review-1",title:"Sarah M.",metadata:"2 weeks ago",description:"Great location! The service was excellent and the atmosphere was perfect."}]}]},{id:"golden-boy",name:"Golden Boy Pizza",subtitle:"Focaccia Pizza · North Beach",coords:[37.799,-122.4093],description:"Focaccia-style squares, late-night favorite. Classic North Beach spot known for thick, fluffy focaccia pizza by the slice.",thumbnail:"https://persistent.oaistatic.com/pizzaz/pizzaz-2.png",features:[{icon:"star",label:"4.6"},{label:"$"}]},{id:"delfina",name:"Pizzeria Delfina",subtitle:"Thin-Crust Pizza · Mission District",coords:[37.7613,-122.4255],description:"Thin-crust classics on 18th Street. Celebrated for perfectly charred, thin-crust pizzas made in a wood-burning oven.",thumbnail:"https://persistent.oaistatic.com/pizzaz/pizzaz-3.png",features:[{icon:"star",label:"4.5"},{label:"$$"}]},{id:"flour-water",name:"Flour + Water Pizzeria",subtitle:"Artisan Pizza · Mission District",coords:[37.7775,-122.4388],description:"Deep-dish and cornmeal crust favorites. Innovative pizzeria from the Flour + Water team with seasonal rotating menu.",thumbnail:"https://persistent.oaistatic.com/pizzaz/pizzaz-6.png",features:[{icon:"star",label:"4.5"},{label:"$$"}]}],k={title:"Composed Components/Maps",component:t,parameters:{layout:"padded"}},i={width:"100%",maxWidth:d,borderRadius:"12px",overflow:"hidden",border:"1px solid var(--ai-color-border-subtle)",boxShadow:"var(--ai-elevation-2-shadow)"},u=()=>{const[p,h]=r.useState(void 0),m=r.useMemo(()=>x,[]);return e.jsxs("div",{style:{padding:"32px",display:"flex",flexDirection:"column",gap:"64px"},children:[e.jsxs("section",{children:[e.jsx("h1",{style:{marginBottom:"16px"},children:"CompactMap"}),e.jsx("p",{style:{margin:0,maxWidth:"720px",color:"var(--ai-color-text-secondary)",fontSize:"16px",lineHeight:1.6},children:"Lightweight map + carousel surface optimised for ChatGPT Apps inline experiences. It combines `MapView` and a synchronized location carousel so users can browse places, tap a card, and see the map pan instantly—all before escalating to fullscreen."})]}),e.jsxs("section",{style:{display:"flex",flexDirection:"column",gap:"24px"},children:[e.jsxs("header",{children:[e.jsx("h2",{style:{marginBottom:"8px"},children:"Inline Experience"}),e.jsx("p",{style:{margin:0,color:"var(--ai-color-text-secondary)"},children:"Drop straight into a ChatGPT canvas. Height defaults to the Apps SDK spec (478px) but can be customised per scenario."})]}),e.jsx("div",{style:i,children:e.jsx(t,{locations:m,selectedId:p,onLocationSelect:h,height:a})}),e.jsxs("div",{style:{background:"var(--ai-color-bg-secondary)",borderRadius:"12px",padding:"16px",maxWidth:d,color:"var(--ai-color-text-secondary)",fontSize:"14px"},children:[e.jsx("strong",{children:"Highlights:"})," carousel follows map selection, smooth marker fly-to, inspector-aware panning, SSR-safe lazy loading, consistent loading/error/empty states."]})]}),e.jsxs("section",{style:{display:"flex",flexDirection:"column",gap:"20px"},children:[e.jsxs("header",{children:[e.jsx("h2",{style:{marginBottom:"8px"},children:"State Management"}),e.jsx("p",{style:{margin:0,color:"var(--ai-color-text-secondary)"},children:"Built-in fallbacks keep the surface stable while data loads or fails."})]}),e.jsxs("div",{style:{display:"grid",gap:"24px",gridTemplateColumns:"repeat(auto-fit, minmax(320px, 1fr))"},children:[e.jsxs("div",{children:[e.jsx("h3",{style:{marginBottom:"12px",fontSize:"14px",color:"var(--ai-color-text-secondary)"},children:"Loading"}),e.jsx("div",{style:i,children:e.jsx(t,{locations:[],loading:!0,height:a,carouselProps:{loadingCardCount:4}})})]}),e.jsxs("div",{children:[e.jsx("h3",{style:{marginBottom:"12px",fontSize:"14px",color:"var(--ai-color-text-secondary)"},children:"Error"}),e.jsx("div",{style:i,children:e.jsx(t,{locations:[],error:!0,height:a,carouselProps:{errorTitle:"Failed to load locations",errorMessage:"Unable to retrieve location data. Please try again."}})})]}),e.jsxs("div",{children:[e.jsx("h3",{style:{marginBottom:"12px",fontSize:"14px",color:"var(--ai-color-text-secondary)"},children:"Empty"}),e.jsx("div",{style:i,children:e.jsx(t,{locations:[],height:a})})]})]})]}),e.jsxs("section",{style:{display:"flex",flexDirection:"column",gap:"16px"},children:[e.jsxs("header",{children:[e.jsx("h2",{style:{marginBottom:"8px"},children:"Interaction Notes"}),e.jsx("p",{style:{margin:0,color:"var(--ai-color-text-secondary)"},children:"Tips to keep the compact experience smooth and accessible."})]}),e.jsxs("ul",{style:{margin:0,paddingLeft:"20px",color:"var(--ai-color-text-secondary)"},children:[e.jsx("li",{children:"Use selection state to keep map and carousel in sync (`selectedId`)."}),e.jsx("li",{children:"Respect loading/error props—do not render custom overlays on top of the Leaflet surface during data fetch."}),e.jsx("li",{children:"Pass `carouselProps.onErrorRetry` to offer a retry CTA without leaving the inline context."}),e.jsx("li",{children:"CompactMap shares `LocationData` with other map components for easy swaps to fullscreen."})]})]}),e.jsxs("section",{style:{display:"flex",flexDirection:"column",gap:"16px"},children:[e.jsxs("header",{children:[e.jsx("h2",{style:{marginBottom:"8px"},children:"Props"}),e.jsx("p",{style:{margin:0,color:"var(--ai-color-text-secondary)"},children:"Core props extend `MapView` with container and carousel configuration."})]}),e.jsx(s,{hideThemeColumn:!0,rows:[{name:"locations",description:"Array of locations to render. Type: LocationData[] (required)"},{name:"selectedId",description:"ID of the currently selected location."},{name:"onLocationSelect",description:"Callback when a location card or marker is selected: (id: string) => void."},{name:"onLocationActive",description:"Callback when a marker is hovered: (id: string | undefined) => void."},{name:"defaultCenter",description:"Default map centre coordinates. Default: [37.7749, -122.4194]."},{name:"defaultZoom",description:"Default zoom level. Default: 12."},{name:"markerColor",description:"Marker colour for default state. Default: var(--ai-color-accent-blue)."},{name:"selectedMarkerColor",description:"Marker colour for selected state. Default: var(--ai-color-accent-blue)."},{name:"height",description:'Fixed height for the container. Accepts number (px) or string. Default: "478px".'},{name:"carouselProps",description:"Partial LocationCarousel props to customise loading/error/empty states."},{name:"loading",description:"Shows skeleton map + cards when true."},{name:"error",description:"Shows error presentation in carousel while the map displays skeleton."}]})]}),e.jsxs("section",{style:{display:"flex",flexDirection:"column",gap:"16px"},children:[e.jsxs("header",{children:[e.jsx("h2",{style:{marginBottom:"8px"},children:"LocationData Structure"}),e.jsx("p",{style:{margin:0,color:"var(--ai-color-text-secondary)"},children:"Shared contract across CompactMap, FullscreenMap, and MapInspector."})]}),e.jsx(s,{hideThemeColumn:!0,rows:[{name:"id",description:"Unique identifier for the location (string)."},{name:"name",description:"Display name used in cards and popups (string)."},{name:"subtitle",description:"Optional subtitle or category text (string)."},{name:"coords",description:"Tuple of [latitude, longitude] used by Leaflet markers (number, number)."},{name:"description",description:"Optional supporting copy displayed in popups and carousel cards (string)."},{name:"thumbnail",description:"Optional image preview used in carousel cards (string URL)."},{name:"features",description:"Array of icon/text pairs displayed beneath the title (Feature[])."},{name:"actions",description:"Optional list of CTA buttons rendered in Inspector context."},{name:"lists",description:"Optional grouped list content (e.g., reviews) shown in Inspector."}]})]}),e.jsxs("section",{style:{display:"flex",flexDirection:"column",gap:"16px"},children:[e.jsxs("header",{children:[e.jsx("h2",{style:{marginBottom:"8px"},children:"When to Escalate"}),e.jsx("p",{style:{margin:0,color:"var(--ai-color-text-secondary)"},children:"CompactMap offers quick exploration. Escalate to fullscreen when deeper context is required."})]}),e.jsxs("ul",{style:{margin:0,paddingLeft:"20px",color:"var(--ai-color-text-secondary)"},children:[e.jsx("li",{children:"If users need side-by-side Inspector and carousel details, escalate to `FullscreenMap`."}),e.jsx("li",{children:"Use `MapView` directly when the carousel isn’t necessary (e.g., single location focus)."}),e.jsx("li",{children:"Keep selection state in a shared store so CompactMap can hand off to fullscreen seamlessly."})]})]})]})},o=()=>e.jsx(u,{});o.__docgenInfo={description:"",methods:[],displayName:"CompactMaps"};var n,l,c;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:"() => <CompactMapDoc />",...(c=(l=o.parameters)==null?void 0:l.docs)==null?void 0:c.source}}};const I=["CompactMaps"];export{o as CompactMaps,I as __namedExportsOrder,k as default};
