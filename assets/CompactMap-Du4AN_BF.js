import{j as e}from"./jsx-runtime-DF2Pcvd1.js";import{M as S,L}from"./LocationCarousel-DwHKGo0Z.js";import{c,B as P}from"./Button-Dng2PzYd.js";import{A as T}from"./Alert-Dd8CbNX0.js";const V="_container_1x18q_1",j="_mapLayer_1x18q_10",O="_mapView_1x18q_15",M="_emptyOverlay_1x18q_20",b="_expandButton_1x18q_34",a={container:V,mapLayer:j,mapView:O,emptyOverlay:M,expandButton:b},A="478px",m=({locations:t,selectedId:r,activeId:d,onLocationSelect:i,onLocationActive:u,defaultCenter:y,defaultZoom:f,markerColor:x,selectedMarkerColor:v,isInspectorOpen:h,loading:s=!1,error:n=!1,height:o=A,className:_,style:C,mapClassName:g,mapStyle:w,carouselProps:q,onExpand:l})=>{const N={...C,height:typeof o=="number"?`${o}px`:o},p=!s&&!n&&t.length===0;return e.jsxs("div",{className:c(a.container,_),style:N,children:[e.jsxs("div",{className:a.mapLayer,children:[e.jsx(S,{locations:t,selectedId:r,activeId:d,onLocationSelect:i,onLocationActive:u,defaultCenter:y,defaultZoom:f,markerColor:x,selectedMarkerColor:v,isInspectorOpen:h,loading:s,error:n,className:c(a.mapView,g),style:w}),l&&e.jsx(P,{variant:"ghost",iconOnly:"expand-lg",onClick:l,"aria-label":"Expand map to fullscreen",className:a.expandButton})]}),e.jsx(L,{locations:t,selectedId:r,onLocationSelect:i,loading:s,error:n,...q,...p?{emptyTitle:"",emptyMessage:""}:{}}),p&&e.jsx("div",{className:a.emptyOverlay,children:e.jsx(T,{variant:"info",hideIcon:!0,layout:"card",title:"No locations yet",message:"Add locations to see them on the map"})})]})};m.displayName="CompactMap";m.__docgenInfo={description:"",methods:[],displayName:"CompactMap",props:{height:{required:!1,tsType:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}]},description:`Fixed height for the compact map container.
Accepts number (px) or string value.
@default 478px`,defaultValue:{value:"'478px'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:"Class name applied to the root container."},style:{required:!1,tsType:{name:"ReactCSSProperties",raw:"React.CSSProperties"},description:"Root container style overrides."},mapClassName:{required:!1,tsType:{name:"string"},description:"Class name applied to the internal MapView container."},mapStyle:{required:!1,tsType:{name:"ReactCSSProperties",raw:"React.CSSProperties"},description:"Style overrides applied to the internal MapView container."},carouselProps:{required:!1,tsType:{name:"Partial",elements:[{name:"Omit",elements:[{name:"LocationCarouselProps"},{name:"union",raw:"'locations' | 'selectedId' | 'onLocationSelect' | 'className'",elements:[{name:"literal",value:"'locations'"},{name:"literal",value:"'selectedId'"},{name:"literal",value:"'onLocationSelect'"},{name:"literal",value:"'className'"}]}],raw:"Omit<LocationCarouselProps, 'locations' | 'selectedId' | 'onLocationSelect' | 'className'>"}],raw:`Partial<
  Omit<LocationCarouselProps, 'locations' | 'selectedId' | 'onLocationSelect' | 'className'>
>`},description:`Additional props forwarded to the carousel component.
Useful for customizing loading, error, and empty states.`},onExpand:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback when user clicks the expand button to enter fullscreen."},loading:{defaultValue:{value:"false",computed:!1},required:!1},error:{defaultValue:{value:"false",computed:!1},required:!1}},composes:["Omit"]};export{m as C};
